function mdWidgetEngineColumnDirective(){return{scope:!1,templateUrl:"/src/components/widgetEngine/templates/widgetEngineColumn.html",controller:function($scope,$element,$attrs,$transclude,$document,$timeout){$scope.widgetEngineClientRect={};var mouseMove=function(e){var newX=e.clientX-$scope.widgetEngineClientRect.left+16,differenceXPercentage=(newX-$element[0].children[0].offsetLeft)/$scope.widgetEngineClientRect.width*100;$scope.configuration.columns[$scope.columnIndex+1].size-(differenceXPercentage-$scope.column.size)<=15||$scope.configuration.columns[$scope.columnIndex].size<=15&&differenceXPercentage<=15||($scope.configuration.columns[$scope.columnIndex+1]&&($scope.configuration.columns[$scope.columnIndex+1].size-=differenceXPercentage-$scope.column.size),$scope.column.size=differenceXPercentage,$timeout(function(){}))},mouseUp=function(){$document.unbind("mouseup",mouseUp),$document.unbind("mousemove",mouseMove),$scope.callback("resize",$scope.configuration)};$scope.setupColumnResizing=function(e){event.preventDefault(),$document.on("mouseup",mouseUp),$document.on("mousemove",mouseMove),$scope.widgetEngineClientRect=$element.parent().parent()[0].getBoundingClientRect()},$scope.addNewColumn=function(){var newColumn=angular.copy($scope.configuration.columns[$scope.columnIndex]);newColumn.widgets=[],newColumn.size="",$timeout(function(){$scope.configuration.columns.splice($scope.columnIndex+1,0,newColumn)})},$scope.removeEmptyColumn=function(){$scope.configuration.columns[$scope.columnIndex+1]&&$scope.configuration.columns[$scope.columnIndex-1]?($scope.configuration.columns[$scope.columnIndex+1].size+=$scope.column.size/2,$scope.configuration.columns[$scope.columnIndex-1].size+=$scope.column.size/2):$scope.configuration.columns[$scope.columnIndex+1]?$scope.configuration.columns[$scope.columnIndex+1].size+=$scope.column.size:$scope.configuration.columns[$scope.columnIndex-1].size&&($scope.configuration.columns[$scope.columnIndex-1].size+=$scope.column.size);var totalWidth=($scope.configuration.columns.splice($scope.columnIndex,1),0);$scope.configuration.columns.forEach(function(c){totalWidth+=c.size})},$scope.isAnyWidgetMoving=function(){var isMoving=!1;return $scope.configuration.columns.forEach(function(c){c.widgets.forEach(function(w){w._internalSettings.isMoving&&(isMoving=!0)})}),isMoving},$element.on("dragenter",function(event){if(!$scope.isAnyWidgetMoving())return!1;$element.addClass("md-widget-engine-column-dashed"),event.stopPropagation()}),$element.on("dragover",function(event){if(!$scope.isAnyWidgetMoving())return!1;$element.addClass("md-widget-engine-column-dashed"),event.stopPropagation(),event.preventDefault&&event.preventDefault()}),$element.on("dragleave",function(event){if(!$scope.isAnyWidgetMoving())return!1;$element.removeClass("md-widget-engine-column-dashed"),event.stopPropagation()}),$element.on("drop",function(event){if(!$scope.isAnyWidgetMoving())return!1;var transfer=event.dataTransfer||event.originalEvent.dataTransfer,draggerPosition=(transfer.getData("Text")||transfer.getData("text/plain")).split("::");if($scope.columnIndex==draggerPosition[0])return void $element.removeClass("md-widget-engine-column-dashed");var removedWidget=($scope.configuration.columns[draggerPosition[0]].widgets[draggerPosition[1]],$scope.configuration.columns[draggerPosition[0]].widgets.splice(draggerPosition[1],1)[0]);$scope.configuration.columns[$scope.columnIndex].widgets.push(removedWidget),$element.removeClass("md-widget-engine-column-dashed"),$document.find(".md-widget-engine-column-dashed").removeClass("md-widget-engine-column-dashed"),$timeout(function(){$scope.$apply(),$scope.callback("update",$scope.configuration)},150)})},link:function($scope,iElm,iAttrs,controller){}}}function mdWidgetEngineWidgetTileDirective(){return{scope:!1,replace:!0,templateUrl:"/src/components/widgetEngine/templates/widgetEngineWidgetTile.html",controller:mdWidgetEngineWidgetTileDirectiveController(),link:function($scope,iElm,iAttrs,controller){}}}function mdWidgetEngineWidgetTileDragger(){return function($scope,$element,$attrs,$transclude){$element.attr("draggable","true"),$element.on("dragstart dragend",function(event){$scope.widget.sticky||(event=event.originalEvent||event,event._initiatedByDragger=!0)})}}function mdWidgetEngineWidgetTileContentHtml(){return{transclude:!0,controller:function($scope,$element,$attrs,$transclude,$timeout,$compile){var el=$compile($scope.widget.content)($scope);$element.parent().append(el)},link:function($scope,iElm,iAttrs,controller){}}}function mdWidgetEngineDirective(){return{scope:{configuration:"=configuration",callback:"=callback"},templateUrl:"/src/components/widgetEngine/templates/widgetEngine.html",controller:function($scope,$element,$attrs,$transclude,$timeout){$timeout(function(){$scope.configuration=$scope.configuration||{}})},link:function($scope,iElm,iAttrs,controller){}}}function mdWidgetEngineWidgetTileDirectiveController(){var _obj={};return _obj._draggedTile=null,_obj.controller=function($scope,$element,$attrs,$transclude,$mdDialog,$timeout,$sce,$document){$scope.fullscreen=!1,$scope.widget._internalSettings={},$scope.widget._internalSettings.trustedURL=$sce.trustAsResourceUrl($scope.widget.content),$scope.widget._internalSettings.trustedHTML=$sce.trustAsHtml($scope.widget.content),$scope.widget._internalSettings.isFabControlOpen=!1,$scope.widget._internalSettings.isMoving=!1,$scope.toggleFullscreen=function(){$scope.fullscreen=!$scope.fullscreen,$scope.callback("toggleFullscreen",$scope.widget)},$scope.toggleSticky=function(){$scope.widget.sticky=!$scope.widget.sticky},$scope.removeWidget=function(e){var confirm=$mdDialog.confirm().title("Are you sure?").textContent('Remove the "'+$scope.widget.title+'" widget?').ariaLabel("Are you sure you want to remove the widget").targetEvent(e).ok("Yes").cancel("Cancel");$mdDialog.show(confirm).then(function(){$element.addClass("md-widget-engine-widget-remove"),$timeout(function(){var removedWidget=$scope.configuration.columns[$scope.columnIndex].widgets.splice($scope.widgetIndex,1);$scope.callback("removeWidget",removedWidget[0]),$scope.callback("update",$scope.configuration)},200)},function(){})},$scope.customActionCallback=function(cAction){$scope.callback(cAction.event,$scope.widget)},$scope.openMenu=function($mdOpenMenu,ev){originatorEv=ev,$mdOpenMenu(ev)},$element.on("dragstart",function(event){event.stopPropagation();var dragger=event._initiatedByDragger||event.originalEvent._initiatedByDragger,transfer=event.dataTransfer||event.originalEvent.dataTransfer;if(!dragger||$scope.fullscreen)return transfer.types&&transfer.types.length||event.preventDefault(),void event.stopPropagation();$element.addClass("md-widget-engine-widget-moving");var draggerPosition=$scope.columnIndex+"::"+$scope.widgetIndex;transfer.setData("Text",draggerPosition),transfer.effectAllowed="move",transfer.dropEffect="move",transfer.setDragImage($element[0],20,20),_obj._draggedTile=$element,$scope.widget._internalSettings.isMoving=!0}),$element.on("dragenter",function(event){return event.stopPropagation(),!$scope.widget.sticky&&(!!$scope.isAnyWidgetMoving()&&void($element.hasClass("md-widget-engine-widget-moving")||$element.addClass("md-widget-engine-widget-dashed")))}),$element.on("dragover",function(event){return event.stopPropagation(),!$scope.widget.sticky&&(!!$scope.isAnyWidgetMoving()&&void($element.hasClass("md-widget-engine-widget-moving")||($element.addClass("md-widget-engine-widget-dashed"),event.preventDefault&&event.preventDefault())))}),$element.on("dragleave",function(event){return event.stopPropagation(),!$scope.widget.sticky&&(!!$scope.isAnyWidgetMoving()&&void $element.removeClass("md-widget-engine-widget-dashed"))}),$element.on("dragend",function(event){return event.stopPropagation(),!$scope.widget.sticky&&(!!$scope.isAnyWidgetMoving()&&(event=event.originalEvent||event,$element.removeClass("md-widget-engine-widget-moving"),void($scope.widget._internalSettings.isMoving=!1)))}),$element.on("drop",function(event){if(event.stopPropagation(),$scope.widget.sticky)return!1;if(!$scope.isAnyWidgetMoving())return!1;var transfer=event.dataTransfer||event.originalEvent.dataTransfer,draggerPosition=(transfer.getData("Text")||transfer.getData("text/plain")).split("::");if($scope.columnIndex!=draggerPosition[0]||$scope.widgetIndex!=draggerPosition[1]){var dropeePosition=[$scope.columnIndex,$scope.widgetIndex],draggerElement=$scope.configuration.columns[draggerPosition[0]].widgets[draggerPosition[1]],dropeeElement=$scope.configuration.columns[dropeePosition[0]].widgets[dropeePosition[1]];$scope.configuration.columns[draggerPosition[0]].widgets[draggerPosition[1]]=dropeeElement,$scope.configuration.columns[dropeePosition[0]].widgets[dropeePosition[1]]=draggerElement,_obj._draggedTile.removeClass("md-widget-engine-widget-dashed"),$element.removeClass("md-widget-engine-widget-dashed"),$timeout(function(){$scope.$apply(),$scope.callback("update",$scope.configuration)},150),event.preventDefault()}})},_obj.controller}angular.module("ngMdWidgetEngine",["ngMaterial"]),angular.module("ngMdWidgetEngine").directive("mdWidgetEngineWidgetDragger",mdWidgetEngineWidgetTileDragger).directive("mdWidgetEngineWidgetTileContentHtml",mdWidgetEngineWidgetTileContentHtml).directive("mdWidgetEngineWidgetTile",mdWidgetEngineWidgetTileDirective).directive("mdWidgetEngineColumn",mdWidgetEngineColumnDirective).directive("mdWidgetEngine",mdWidgetEngineDirective),angular.module("ngMdWidgetEngine").run(["$templateCache",function($templateCache){$templateCache.put("/src/components/widgetEngine/templates/widgetEngine.html",'<div class="md-widget-engine-container" ng-if="configuration.columns">\n    <div class="md-widget-engine">\n        <div layout="row" flex style="height: 100%">\n            <md-widget-engine-column \n                ng-repeat="(columnIndex, column) in configuration.columns" \n                column="column" \n                style="background-color: {{column.background}}; width: {{column.size}}%; min-width: 15%;"\n            ></md-widget-engine-column>\n        </div>\n    </div>\n</div>\x3c!-- md-widget-engine-container --\x3e'),$templateCache.put("/src/components/widgetEngine/templates/widgetEngineColumn.html",'<div class="md-widget-engine-column" style="height:100%; position:relative">\n    \n    <span class="md-widget-engine-column-resizer" ng-mousedown="setupColumnResizing($event)" ng-show="configuration.columns.length-1 > columnIndex && configuration.resizeableColumns !== false">\n    </span>\n    <div class="md-widget-engine-new-column-handler {{configuration.columns.length==1 ? \'single-column-only\' : \'\'}}" ng-show="configuration.columns.length-1 > columnIndex || configuration.columns.length==1 || column.widgets.length==0">\n        <div ng-click="addNewColumn()" ng-show="column.widgets.length > 0 && configuration.columns.length < 6 && configuration.dynamicColumns !== false" style="outline: none; border: 0px;">\n            <md-icon class="material-icons md-dark md-24" style="outline: none">add_circle</md-icon>\n            <md-tooltip md-direction="{{columnIndex == configuration.columns.length-1 ? \'left\': \'right\'}}">Add new column here</md-tooltip>\n        </div>\n        <div ng-click="removeEmptyColumn()" ng-show="column.widgets.length == 0 && configuration.dynamicColumns !== false" style="outline: none; border: 0px;">\n            <md-icon class="material-icons md-dark md-24">remove_circle</md-icon>\n            <md-tooltip md-direction="left">Remove this column</md-tooltip>\n        </div>\n    </div>\n\n    <div class="md-widget-engine-widget-tiles-container">\n        <md-widget-engine-widget-tile ng-repeat="(widgetIndex, widget) in column.widgets" widget="widget" widgetIndex="widgetIndex"></md-widget-engine-widget-tile>\n    </div>\n</div>\x3c!-- md-widget-engine-column --\x3e'),$templateCache.put("/src/components/widgetEngine/templates/widgetEngineWidgetTile.html",'<div class="md-widget-engine-widget-tile-container {{fullscreen ? \'md-widget-engine-widget-fullscreen\' : \'\'}} md-widget-engine-widget-{{widget.name}}">\n    <div class="md-widget-engine-widget-tile md-whiteframe-2dp">\n\n        <div class="md-widget-engine-widget-tile-title-container md-widget-engine-widget-{{widget.name}}">\n            <md-toolbar class="md-whiteframe-2dp md-widget-engine-title-control-type-{{widget.controlsLayout || \'default\'}}" style="z-index: {{(configuration.columns[columnIndex].widgets.length - widgetIndex) * 10}}">\n                <div class="md-toolbar-tools" style="cursor: pointer" md-widget-engine-widget-dragger>\n                    <div class="md-widget-engine-widget-tile-title" flex>\n                        <div style="text-overflow: ellipsis; overflow: hidden; white-space: nowrap; width: 80%">{{widget.title || \'Widget\'}}</div>\n                    </div>\n                    <span ></span>\n                    <div class="md-widget-engine-widget-tile-controls-container" style="position:relative">\n                        <div ng-switch on="widget.controlsLayout">\n\n                            <div ng-switch-default class="md-widget-engine-widget-title-default-controls">\n                                <div class="md-widget-engine-widget-tile-control" ng-mouseup="removeWidget($event)" ng-show="widget.closeControl !== false">\n                                    <span class="md-widget-engine-widget-close-control">\n                                        <md-icon class="material-icons md-light md-24">\n                                            close\n                                            <md-tooltip md-direction="bottom">Remove this widget</md-tooltip>\n                                        </md-icon>\n                                    </span>\n                                </div>\n                                <div class="md-widget-engine-widget-tile-control" ng-click="toggleSticky()" ng-show="widget.stickyControl">\n                                    <span class="md-widget-engine-widget-sticky-control">\n                                        <md-icon class="material-icons md-light md-24" ng-if="!widget.sticky">\n                                            lock_open\n                                            <md-tooltip md-direction="bottom">Make this widget sticky</md-tooltip>\n                                        </md-icon>\n                                        <md-icon class="material-icons md-light md-24" ng-if="widget.sticky">\n                                            lock\n                                            <md-tooltip md-direction="bottom">Make this widget non-sticky</md-tooltip>\n                                        </md-icon>\n                                    </span>\n                                </div>\n                                <div class="md-widget-engine-widget-tile-control" ng-click="toggleFullscreen()" ng-show="widget.fullscreenControl !== false">\n                                    <span class="md-widget-engine-widget-fullscreen-control">\n                                        <md-icon class="material-icons md-light md-24">\n                                            fullscreen\n                                            <md-tooltip md-direction="bottom">Toggle fullscreen mode</md-tooltip>\n                                        </md-icon>\n                                    </span>\n                                </div>\n\n                                <div class="md-widget-engine-widget-tile-control" ng-repeat="cAction in widget.customActions" class="md-fab md-mini md-raised" ng-click="customActionCallback(cAction)">\n                                    <span class="md-widget-engine-widget-custom-control">\n                                        <md-icon class="material-icons md-light md-24">\n                                            {{cAction.icon}}\n                                            <md-tooltip md-direction="bottom">{{cAction.tooltip}}</md-tooltip>\n                                        </md-icon>\n                                    </span>\n                                </div>\n                            </div>\x3c!-- default layout --\x3e\n\n\n                            <div ng-switch-when="fab" class="md-widget-engine-widget-title-fab-controls">\n                                <md-fab-speed-dial md-direction="down" class="md-scale" ng-show="widget.closeControl !== false || widget.fullscreenControl !== false || widget.stickyControl !== false || widget.customActions.length ">\n                                    <md-fab-trigger>\n                                        <md-button aria-label="menu" class="md-fab md-mini md-raised md-button">\n                                            <md-icon class="material-icons md-light md-24">more_vert</md-icon>\n                                        </md-button>\n                                    </md-fab-trigger>\n\n                                    <md-fab-actions>\n                                        <md-button class="md-fab md-mini md-raised" ng-mouseup="removeWidget($event)" ng-show="widget.closeControl !== false">\n                                            <md-icon class="material-icons md-light md-24">\n                                                close\n                                                <md-tooltip md-direction="bottom">Remove this widget</md-tooltip>\n                                            </md-icon>\n                                        </md-button>\n\n                                        <md-button class="md-fab md-mini md-raised" ng-click="toggleSticky()" ng-show="widget.stickyControl">\n                                            <md-icon class="material-icons md-light md-24" ng-if="!widget.sticky">\n                                                lock_open\n                                                <md-tooltip md-direction="bottom">Make this widget sticky</md-tooltip>\n                                            </md-icon>\n                                            <md-icon class="material-icons md-light md-24" ng-if="widget.sticky">\n                                              lock\n                                              <md-tooltip md-direction="bottom">Make this widget non-sticky</md-tooltip>\n                                            </md-icon>\n                                        </md-button>\n\n                                        <md-button class="md-fab md-mini md-raised" ng-click="toggleFullscreen()" ng-show="widget.fullscreenControl !== false">\n                                            <md-icon class="material-icons md-light md-24">\n                                                fullscreen\n                                                <md-tooltip md-direction="bottom">Toggle fullscreen mode</md-tooltip>\n                                            </md-icon>\n                                        </md-button>\n\n                                        <md-button ng-repeat="cAction in widget.customActions" class="md-fab md-mini md-raised " ng-click="customActionCallback(cAction)">\n                                            <md-icon class="material-icons md-light md-24">\n                                                {{cAction.icon}}\n                                                <md-tooltip md-direction="bottom">{{cAction.tooltip}}</md-tooltip>\n                                            </md-icon>\n                                        </md-button>\n\n                                    </md-fab-actions>\n                                </md-fab-speed-dial>\n                            </div>\x3c!-- fab-controls layout --\x3e\n\n\n                            <div ng-switch-when="menu" class="md-widget-engine-widget-title-menu-controls">\n                                    <md-menu ng-show="widget.closeControl !== false || widget.fullscreenControl !== false || widget.stickyControl !== false || widget.customActions.length ">\n                                      <md-button aria-label="Open menu" class="md-icon-button" ng-click="openMenu($mdOpenMenu, $event)">\n                                        <md-icon md-menu-origin>more_vert</md-icon>\n                                      </md-button>\n                                      <md-menu-content width="2">\n                                        <md-menu-item>\n                                          <md-button ng-mouseup="removeWidget($event)" ng-show="widget.closeControl !== false">\n                                            <md-icon class="material-icons md-light md-24" md-menu-align-target>close</md-icon>\n                                            Remove this widget\n                                          </md-button>\n                                        </md-menu-item>\n\n                                        <md-menu-item ng-show="widget.stickyControl">\n                                          <md-button ng-click="toggleSticky()" ng-if="!widget.sticky">\n                                            <md-icon class="material-icons md-light md-24" md-menu-align-target>lock_open</md-icon>\n                                            Make this widget sticky\n                                          </md-button>\n                                          <md-button ng-click="toggleSticky()" ng-if="widget.sticky">\n                                            <md-icon class="material-icons md-light md-24" md-menu-align-target>lock</md-icon>\n                                            Make this widget non-sticky\n                                          </md-button>\n                                        </md-menu-item>\n\n                                        <md-menu-item>\n                                          <md-button ng-click="toggleFullscreen()" ng-show="widget.fullscreenControl !== false">\n                                            <md-icon class="material-icons md-light md-24" md-menu-align-target>fullscreen</md-icon>\n                                            Toggle fullscreen\n                                          </md-button>\n                                        </md-menu-item>\n\n                                        <md-menu-divider ng-if="widget.customActions.length"></md-menu-divider>\n\n                                        <md-menu-item ng-repeat="cAction in widget.customActions">\n                                          <md-button ng-click="customActionCallback(cAction)">\n                                            <md-icon class="material-icons md-light md-24" md-menu-align-target>{{cAction.icon}}</md-icon>\n                                            {{cAction.tooltip}}\n                                          </md-button>\n                                        </md-menu-item>\n                                        \n                                      </md-menu-content>\n                                    </md-menu>\n                            </div>\x3c!-- menu layout --\x3e\n\n\n\n                        </div>\x3c!-- ng-switch--\x3e\n                    </div>\x3c!-- md-widget-engine-widget-tile-controls-container --\x3e\n                </div>\x3c!-- md-toolbar-tools --\x3e\n            </md-toolbar>\n        </div>\n\n        <div class="md-widget-engine-widget-tile-content-container md-widget-engine-widget-{{widget.name}}">\n            <md-content>\n                <div class="md-widget-engine-widget-tile-content {{widget.resize ? \'resize-vertical\' : \'\'}}" style="min-height:{{fullscreen ? \'100%\' : widget.minHeight + \'px\'}}; height:{{fullscreen ? \'100%\' : widget.minHeight + \'px\'}}; max-height:{{fullscreen ? \'100%\' : widget.maxHeight + \'px\'}}; position:relative;">\n                    <div ng-switch on="widget.type" style="height: inherit">\n                        <div ng-switch-when="include" style="height: inherit">\n                            <ng-include src="widget.content"></ng-include>\n                        </div>\x3c!-- ng-switch-when --\x3e\n\n                        <div ng-switch-when="iframe" style="height: inherit">\n                            <iframe ng-src="{{widget._internalSettings.trustedURL}}" frameborder=0 style="border:0px; width:100%; height:100%"></iframe>\n                        </div>\x3c!-- ng-switch-when --\x3e\n\n                        <div ng-switch-when="html" style="height: inherit">\n                            <md-widget-engine-widget-tile-content-html>\n                                {{widget._internalSettings.trustedHTML}}\n                            </md-widget-engine-widget-tile-content-html>\n                        </div>\x3c!-- ng-switch-when --\x3e\n\n                    </div> \x3c!-- ng-switch --\x3e\n                </div>\n            </md-content>    \n        </div>\n\n    </div>\x3c!-- md-widget-engine-widget-tile --\x3e\n</div>\x3c!-- md-widget-engine-widget-tile-container --\x3e\n')}]);